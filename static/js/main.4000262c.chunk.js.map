{"version":3,"sources":["components/ui/Notifications.js","utils/index.js","utils/constants.js","components/ui/Identicon.js","components/Wallet.js","components/minter/Cover.js","utils/minter.js","components/minter/nfts/Add.js","components/minter/nfts/Card.js","components/ui/Loader.js","components/minter/nfts/index.js","hooks/useMinterContract.js","hooks/useContract.js","assets/bg_image.jpg","App.js","hooks/useBalance.js","reportWebVitals.js","index.js"],"names":["Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","text","className","NotificationError","DefaultProps","defaultProps","truncateAddress","address","slice","length","formatBigNumber","num","shiftedBy","toFixed","Identicon","size","rest","ref","useRef","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","style","width","height","Wallet","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","Spinner","animation","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Cover","name","coverImg","connect","background","minHeight","maxWidth","src","alt","Button","catch","e","console","log","client","Web3Storage","token","process","createNft","minterContract","performActions","artName","artistName","description","ipfsImage","category","price","ownerAddress","kit","defaultAccount","data","JSON","stringify","image","trim","includes","replaceAll","blobFile","Blob","type","files","File","file","put","fileCid","url","_price","ethers","utils","parseUnits","String","methods","writePainting","send","from","transaction","uploadFileToWebStorage","rootCid","get","res","cid","getNfts","nfts","totalSupply","call","nftsLength","i","nft","Promise","resolve","tokenURI","fetchNftMeta","meta","readPainting","kamiltouch","index","owner","sold","likes","push","Number","all","ipfsUrl","fetch","json","buyNft","tokenId","buyPainting","value","likeNft","likePainting","alert","AddNfts","save","useState","setArtName","setIpfsImage","setDescription","setCategory","setArtistName","setPrice","show","setShow","handleClose","Modal","onHide","centered","Header","closeButton","Title","Body","Form","FloatingLabel","controlId","label","Control","placeholder","onChange","imageUrl","Footer","disabled","NftCard","useContractKit","isOwner","Col","Card","Badge","bg","objectFit","Text","footerBtn","Loader","role","NftList","setNfts","loading","setLoading","getAssets","useCallback","allNfts","error","addNft","toast","buyArt","likeArt","Add","Row","xs","sm","lg","map","_nft","useMinterContract","abi","contractAddress","getConnectedKit","contract","setContract","getContract","web3","eth","Contract","useContract","KamilTouchAbi","KamilTouch","App","balance","setBalance","getBalance","getTotalBalance","useBalance","Container","fluid","Nav","CELO","class","updateBalance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","networks","Alfajores","network","NetworkNames","rpcUrl","graphQl","explorer","chainId","dapp","document","getElementById"],"mappings":"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","file":"static/js/main.4000262c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nconst Notification = () => (\r\n  <ToastContainer\r\n    position=\"bottom-center\"\r\n    autoClose={5000}\r\n    hideProgressBar\r\n    newestOnTop\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nconst NotificationSuccess = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst NotificationError = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst Props = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nconst DefaultProps = {\r\n  text: \"\",\r\n};\r\n\r\nNotificationSuccess.propTypes = Props;\r\nNotificationSuccess.defaultProps = DefaultProps;\r\n\r\nNotificationError.propTypes = Props;\r\nNotificationError.defaultProps = DefaultProps;\r\n\r\nexport { Notification, NotificationSuccess, NotificationError };\r\n","import {ERC20_DECIMALS} from \"./constants\";\r\n\r\n// format a wallet address\r\nexport const truncateAddress = (address) => {\r\n    if (!address) return\r\n    return address.slice(0, 5) + \"...\" + address.slice(address.length - 4, address.length);\r\n}\r\n\r\n// convert from big number\r\nexport const formatBigNumber = (num) => {\r\n    if (!num) return\r\n    return num.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n}","const ERC20_DECIMALS = 18;\r\nexport { ERC20_DECIMALS };\r\n","import { useEffect, useRef } from \"react\";\r\nimport Jazzicon from \"@metamask/jazzicon\";\r\n\r\nexport default function Identicon({ address, size, ...rest }) {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    if (address && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(\r\n        Jazzicon(size, parseInt(address.slice(2, 10), 16))\r\n      );\r\n    }\r\n  }, [address, size]);\r\n\r\n  return (\r\n    <div {...rest}>\r\n      <div ref={ref} style={{ width: `${size}px`, height: `${size}px` }} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\r\nimport { formatBigNumber, truncateAddress } from \"./../utils\";\r\nimport Identicon from \"./ui/Identicon\";\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant=\"light\"\r\n            align=\"end\"\r\n            id=\"dropdown-basic\"\r\n            className=\"d-flex align-items-center border rounded-pill py-1\"\r\n          >\r\n            {amount ? (\r\n              <>\r\n                {formatBigNumber(amount)}{\" \"}\r\n                <span className=\"ms-1\"> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\r\n            )}\r\n            <Identicon address={address} size={28} className=\"ms-2 me-1\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className=\"shadow-lg border-0\">\r\n            <Dropdown.Item\r\n              href={`https://alfajores-blockscout.celo-testnet.org/address/${address}/transactions`}\r\n              target=\"_blank\"\r\n            >\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <i className=\"bi bi-person-circle fs-4\" />\r\n                <span className=\"font-monospace\">\r\n                  {truncateAddress(address)}\r\n                </span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              className=\"d-flex align-items-center\"\r\n              onClick={() => {\r\n                destroy();\r\n              }}\r\n            >\r\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Cover = ({ name, coverImg, connect }) => {\r\n  if (name) {\r\n    return (\r\n      <div\r\n        className=\"d-flex justify-content-center flex-column text-center \"\r\n        style={{ background: \"#000\", minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"mt-auto text-light mb-5\">\r\n          <div\r\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\r\n            style={{ maxWidth: \"320px\" }}\r\n          >\r\n            <img src={coverImg} alt=\"\" />\r\n          </div>\r\n          <h1>{name}</h1>\r\n          <p>Please connect your wallet to continue.</p>\r\n          <Button\r\n            onClick={() => connect().catch((e) => console.log(e))}\r\n            variant=\"outline-light\"\r\n            className=\"rounded-pill px-3 mt-3\"\r\n          >\r\n            Connect Wallet\r\n          </Button>\r\n        </div>\r\n\r\n        <p className=\"mt-auto text-secondary\">Powered by Celo</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nCover.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nCover.defaultProps = {\r\n  name: \"\",\r\n};\r\n\r\nexport default Cover;","import {Web3Storage} from 'web3.storage/dist/bundle.esm.min.js'\r\nimport axios from \"axios\";\r\nimport { ethers } from \"ethers\";\r\n\r\n\r\nfunction getAccessToken () {\r\n  return process.env.REACT_APP_STORAGE_API_KEY\r\n}\r\n\r\nfunction makeStorageClient () {\r\n  return new Web3Storage({ token: getAccessToken() })\r\n}\r\n\r\nconst client = makeStorageClient();\r\n\r\nconst uploadFile = (file) => {\r\n  const file_cid = client.put(file);\r\n  return file_cid;\r\n}\r\n\r\n\r\nexport const createNft = async (\r\n  minterContract,\r\n  performActions,\r\n  { artName, artistName, description, ipfsImage, category, price, ownerAddress }\r\n) => {\r\n  console.log(\"Data seen...\");\r\n\r\n  await performActions(async (kit) => {\r\n    if (!artName || !description || !ipfsImage || !artistName || !category || !price) return;\r\n    const { defaultAccount } = kit;\r\n    console.log(\"Sending data...\")\r\n\r\n    // convert NFT metadata to JSON format\r\n    const data = JSON.stringify({\r\n      artName,\r\n      artistName,\r\n      description,\r\n      category,\r\n      image: ipfsImage,\r\n    });\r\n\r\n    try {\r\n      // editing file name\r\n      let name = artName.trim();\r\n      if(name.includes(\" \")) {\r\n        name = name.replaceAll(\" \", \"%20\");\r\n      }\r\n\r\n      // save NFT metadata to IPFS\r\n      const blobFile = new Blob([data], { type: 'application/json' });\r\n      const files = [ new File([blobFile], `${artName}`) ];\r\n      console.log(files)\r\n\r\n      const fileCid = await uploadFile(files);\r\n      console.log(fileCid)\r\n      console.log(name)\r\n\r\n      // IPFS url for uploaded metadata\r\n      const url = `https://${fileCid}.ipfs.w3s.link/${name}`\r\n      console.log(url)\r\n      const _price = ethers.utils.parseUnits(String(price), \"ether\");\r\n\r\n      // mint the NFT and save the IPFS url to the blockchain\r\n      const transaction = await minterContract.methods\r\n        .writePainting(url, _price)\r\n        .send({ from: defaultAccount });\r\n\r\n      return transaction;\r\n    } catch (error) {\r\n      console.log(\"Error uploading file: \", error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const uploadFileToWebStorage = async (e) => {\r\n  // Construct with token and endpoint\r\n  const file = e.target.files;\r\n  if (!file) return;\r\n  // Pack files into a CAR and send to web3.storage\r\n  const rootCid = await client.put(file) // Promise<CIDString>\r\n  console.log(rootCid);\r\n\r\n  // Fetch and verify files from web3.storage\r\n  const res = await client.get(rootCid) // Promise<Web3Response | null>\r\n  console.log(res);\r\n  console.log(res.url)\r\n  const files = await res.files() // Promise<Web3File[]>\r\n  console.log(files[0].cid)\r\n\r\n  // return `https://${rootCid}.ipfs.w3s.link/${fileName}`\r\n  return `https://${files[0].cid}.ipfs.w3s.link/`\r\n};\r\n\r\nexport const getNfts = async (minterContract) => {\r\n  try {\r\n    const nfts = [];\r\n    const nftsLength = await minterContract.methods.totalSupply().call();\r\n    console.log(nftsLength)\r\n    for (let i = 0; i < Number(nftsLength); i++) {\r\n      const nft = new Promise(async (resolve) => {\r\n        const res = await minterContract.methods.tokenURI(i).call();\r\n        const meta = await fetchNftMeta(res);\r\n        const kamiltouch = await minterContract.methods.readPainting(i).call();\r\n        resolve({\r\n          index: i,\r\n          owner: kamiltouch[0],\r\n          artName: meta.artName,\r\n          artistName: meta.artistName,\r\n          image: meta.image,\r\n          description: meta.description,\r\n          price: kamiltouch[3],\r\n          category: meta.category,\r\n          sold: kamiltouch[5],\r\n          likes: kamiltouch[4]\r\n        });\r\n      });\r\n      nfts.push(nft);\r\n    }\r\n    console.log(nfts)\r\n    return Promise.all(nfts);\r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n\r\nexport const fetchNftMeta = async (ipfsUrl) => {\r\n  console.log(ipfsUrl)\r\n  try {\r\n    if (!ipfsUrl) return null;\r\n    const data = await fetch(ipfsUrl);\r\n    console.log(data)\r\n    const meta = await data.json();\r\n    console.log(meta)\r\n\r\n    return meta;\r\n  } catch (e) {\r\n    console.log({ e });\r\n  }\r\n};\r\n\r\nexport const buyNft = async (minterContract, performActions, tokenId) => {\r\n  try {\r\n    await performActions(async (kit) => {\r\n      const { defaultAccount } = kit;\r\n      const kamiltouch = await minterContract.methods.readPainting(tokenId).call();\r\n      await minterContract.methods.buyPainting(tokenId).send({ from: defaultAccount, value: kamiltouch[3]})\r\n    })\r\n  } catch (e) {\r\n    console.log({ e })\r\n  }\r\n}\r\n\r\nexport const likeNft = async (minterContract, performActions, tokenId) => {\r\n  try {\r\n    await performActions(async (kit) => {\r\n      const { defaultAccount } = kit;\r\n      await minterContract.methods.likePainting(tokenId).send({ from: defaultAccount });\r\n    })\r\n  } catch (e) {\r\n    alert(\"Sorry, you can only like once\")\r\n    console.log({ e })\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\r\nimport { uploadFileToWebStorage } from \"../../../utils/minter\";\r\n\r\n\r\nconst AddNfts = ({ save, address }) => {\r\n  const [artName, setArtName] = useState(\"\");\r\n  const [ipfsImage, setIpfsImage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [artistName, setArtistName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const isFormFilled = () =>\r\n  artName && ipfsImage && description && category && artistName && price;\r\n\r\n  // close the popup modal\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setCategory([]);\r\n  };\r\n\r\n  // display the popup modal\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleShow}\r\n        variant=\"success\"\r\n        className=\"rounded-pill px-0\"\r\n        style={{ width: \"38px\" }}\r\n      >\r\n        <i className=\"bi bi-plus\"></i>\r\n      </Button>\r\n\r\n      {/* Modal */}\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create Art NFT</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form>\r\n            <FloatingLabel\r\n              controlId=\"inputLocation\"\r\n              label=\"Art Name\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Name of Art\"\r\n                onChange={(e) => {\r\n                  setArtName(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n\r\n            \r\n            <FloatingLabel\r\n              controlId=\"inputLocation\"\r\n              label=\"Artist Name\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Name of Artist\"\r\n                onChange={(e) => {\r\n                  setArtistName(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <select\r\n              className=\"form-select my-3 py-3\"\r\n              onClick={(e)=> {\r\n                setCategory(e.target.value)\r\n              }}\r\n            >\r\n              <option>Category</option>\r\n              <option value=\"Nature\">Nature</option>\r\n              <option value=\"Abstract\">Abstract</option>\r\n              <option value=\"Real\">Real</option>\r\n              <option value=\"Cosmic\">Cosmic</option>\r\n              <option value=\"Portrait\">Portrait</option>\r\n            </select>\r\n\r\n            <FloatingLabel\r\n              controlId=\"inputDescription\"\r\n              label=\"Description\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"description\"\r\n                style={{ height: \"80px\" }}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <Form.Control\r\n              type=\"file\"\r\n              className={\"mb-3\"}\r\n              onChange={async (e) => {\r\n                const imageUrl = await uploadFileToWebStorage(e);\r\n                if (!imageUrl) {\r\n                  alert(\"failed to upload image\");\r\n                  return;\r\n                }\r\n                setIpfsImage(imageUrl);\r\n              }}\r\n              placeholder=\"Art image\"\r\n            ></Form.Control>\r\n\r\n            \r\n            <FloatingLabel\r\n              controlId=\"inputLocation\"\r\n              label=\"Price\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Price of Art\"\r\n                onChange={(e) => {\r\n                  setPrice(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n          </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              save({\r\n                artName,\r\n                artistName,\r\n                ipfsImage,\r\n                description,\r\n                ownerAddress: address,\r\n                category,\r\n                price,\r\n              });\r\n              handleClose();\r\n            }}\r\n          >\r\n            Create NFT\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nAddNfts.propTypes = {\r\n  save: PropTypes.func.isRequired,\r\n  address: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AddNfts;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Col, Badge, Stack, Button } from \"react-bootstrap\";\r\nimport { truncateAddress } from \"../../../utils\";\r\nimport Identicon from \"../../ui/Identicon\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\n\r\nconst NftCard = ({ nft, buyNft, likeNft }) => {\r\n  const {kit} = useContractKit();\r\n  const {defaultAccount} = kit;\r\n  const { price, image, description, owner, artistName, artName, index, category, sold, likes } = nft;\r\n\r\n  function isOwner() {\r\n    if(defaultAccount === owner) return true\r\n    else return false\r\n  }\r\n  function footerBtn() {\r\n    if(sold){\r\n      if(isOwner()) {\r\n        return <><Button variant=\"outline-success\" disabled>Owned</Button><Button variant=\"outline-success\" onClick={likeNft}>Like</Button></>\r\n      }\r\n      else if(!isOwner()) {\r\n        return <><Button variant=\"danger\" disabled>Sold</Button><Button variant=\"outline-success\" onClick={likeNft}>Like</Button></>\r\n      }\r\n    }\r\n    else {\r\n      if(isOwner()) {\r\n        return <><Button variant=\"outline-success\" disabled>Owned</Button><Button variant=\"outline-success\" onClick={likeNft}>Like</Button></>\r\n      }\r\n      else if(!isOwner()) {\r\n        return <><Button variant=\"success\" onClick={buyNft}>Buy {price/10**18}cUSD</Button><Button variant=\"outline-success\" onClick={likeNft}>Like</Button></>\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Col key={index}>\r\n      <Card className=\" h-100\">\r\n        <Card.Header>\r\n          <Stack direction=\"horizontal\" gap={2}>\r\n            <Identicon address={owner} size={28} />\r\n            <span className=\"font-monospace text-secondary\">\r\n              {truncateAddress(owner)}\r\n            </span>\r\n            <Badge bg=\"secondary\" className=\"ms-auto\">\r\n              {index} ID\r\n            </Badge>\r\n          </Stack>\r\n        </Card.Header>\r\n\r\n        <div className=\" ratio ratio-4x3\">\r\n          <img src={image} alt={description} style={{ objectFit: \"cover\" }} />\r\n        </div>\r\n\r\n        <Card.Body className=\"d-flex flex-column text-center\">\r\n          <Card.Title className=\"fs-3\">{artName}</Card.Title>\r\n          <Card.Text className=\"d-flex mb-2 justify-content-center gap-3 flex-grow-1 text-capitalize\">\r\n            <span>artist: {artistName} </span>\r\n            <span>category: {category}</span>\r\n          </Card.Text>\r\n          <Card.Text className=\"d-flex mb-2 flex-column justify-content-center gap-2 flex-grow-1 text-capitalize\">\r\n            <span>{description}</span>\r\n            <span>Likes: {likes}</span>\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer className=\"d-flex justify-content-center gap-3\">\r\n          {footerBtn()}\r\n        </Card.Footer>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nNftCard.propTypes = {\r\n  // props passed into this component\r\n  nft: PropTypes.instanceOf(Object).isRequired,\r\n};\r\n\r\nexport default NftCard;","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"d-flex justify-content-center\">\r\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);\r\nexport default Loader;\r\n","import { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport AddNfts from \"./Add\";\r\nimport Nft from \"./Card\";\r\nimport Loader from \"../../ui/Loader\";\r\nimport { NotificationSuccess, NotificationError } from \"../../ui/Notifications\";\r\nimport {\r\n  getNfts,\r\n  createNft,\r\n  buyNft,\r\n  likeNft\r\n} from \"../../../utils/minter\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nconst NftList = ({ minterContract, name }) => {\r\n  const { performActions, address } = useContractKit();\r\n  const [nfts, setNfts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // const dummy_data = [\r\n  //   {\r\n  //     index: 0,\r\n  //     artName: \"Sample 1\",\r\n  //     description: \"Sample 1 description\",\r\n  //     artistName: \"Kamil\",\r\n  //     owner: \"0x18DeD0A136C0f133f845c4c8e472A96Db12AeB7c\",\r\n  //     image: \"https://th.bing.com/th/id/R.3be03d1d025cd3a63474c18618d9bbbc?rik=jYHrzmhMEH2%2fuw&pid=ImgRaw&r=0\",\r\n  //     category: \"Life\",\r\n  //     sold: false,\r\n  //     likes: 3,\r\n  //     price: 2000000000000000000\r\n  //   },\r\n  //   {\r\n  //     index: 1,\r\n  //     artName: \"Sample 2\",\r\n  //     description: \"Sample 2 description\",\r\n  //     artistName: \"James\",\r\n  //     owner: \"0x841dF9AB55aCB5bE2C106eC1E17F57c0952DE4FD\",\r\n  //     image: \"https://th.bing.com/th/id/OIP.kXpujIUtL5LHMHo7tD9jvQHaFe?pid=ImgDet&rs=1\",\r\n  //     category: \"Abstract\",\r\n  //     sold: false,\r\n  //     likes: 0,\r\n  //     price: 2000000000000000000\r\n  //   },\r\n  //   {\r\n  //     index: 2,\r\n  //     artName: \"Sample 3\",\r\n  //     description: \"Sample 3 description\",\r\n  //     artistName: \"Johnnie\",\r\n  //     owner: \"0x18DeD0A136C0f133f845c4c8e472A96Db12AeB7c\",\r\n  //     image: \"https://th.bing.com/th/id/R.a831b831fab983a6d772ff6d01e00993?rik=z7OzT3rzRY%2bpnw&pid=ImgRaw&r=0\",\r\n  //     category: \"Cosmic\",\r\n  //     sold: false,\r\n  //     likes: 0,\r\n  //     price: 2000000000000000000\r\n  //   },\r\n  //   {\r\n  //     index: 3,\r\n  //     artName: \"Sample 4\",\r\n  //     description: \"Sample 4 description\",\r\n  //     artistName: \"Rajesh\",\r\n  //     owner: \"0x18DeD0A136C0f133f845c4c8e472A96Db12AeB7c\",\r\n  //     image: \"https://th.bing.com/th/id/OIP.h5btTjbkLyAGaSea89ch-gHaJU?pid=ImgDet&w=636&h=800&rs=1\",\r\n  //     category: \"Abstract\",\r\n  //     sold: true,\r\n  //     likes: 0,\r\n  //     price: 4000000000000000000\r\n  //   },\r\n  //   {\r\n  //     index: 4,\r\n  //     artName: \"Sample 5\",\r\n  //     description: \"Sample 5 description\",\r\n  //     artistName: \"Sanjay\",\r\n  //     owner: \"0x841dF9AB55aCB5bE2C106eC1E17F57c0952DE4FD\",\r\n  //     image: \"https://th.bing.com/th/id/OIP.bqutUx89b0bohtsjs7bp_AHaHY?pid=ImgDet&w=910&h=908&rs=1\",\r\n  //     category: \"Nature\",\r\n  //     sold: false,\r\n  //     likes: 0,\r\n  //     price: 3000000000000000000\r\n  //   }\r\n  // ]\r\n\r\n  const getAssets = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const allNfts = await getNfts(minterContract);\r\n      if (!allNfts) return;\r\n      setNfts(allNfts);\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [minterContract]);\r\n\r\n  const addNft = async (data) => {\r\n    console.log(data)\r\n    try {\r\n      setLoading(true);\r\n      console.log(\"Awaiting.....\")\r\n      await createNft(minterContract, performActions, data);\r\n      toast(<NotificationSuccess text=\"Updating NFT list....\" />);\r\n      getAssets();\r\n    } catch (error) {\r\n      console.log({ error });\r\n      toast(<NotificationError text=\"Failed to create an NFT.\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const buyArt = async (tokenId) => {\r\n    try {\r\n      setLoading(true);\r\n      await buyNft(minterContract, performActions, tokenId);\r\n      toast(<NotificationSuccess text=\"Updating NFT list....\" />);\r\n      getAssets();\r\n    } catch (e) {\r\n      console.log({e})\r\n      toast(<NotificationError text=\"Failed to buy NFT Painting.\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const likeArt = async (tokenId) => {\r\n    console.log(tokenId);\r\n    try {\r\n      setLoading(true);\r\n      await likeNft(minterContract, performActions, tokenId);\r\n      toast(<NotificationSuccess text=\"Updating NFT list....\" />);\r\n      getAssets();\r\n    } catch (e) {\r\n      console.log({e})\r\n      toast(<NotificationError text=\"Failed to like NFT Painting.\" />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (address && minterContract) {\r\n        getAssets();\r\n      }\r\n    } catch (error) {\r\n      console.log({ error });\r\n    }\r\n  }, [minterContract, address, getAssets]);\r\n\r\n  if (address) {\r\n    return (\r\n      <>\r\n        {!loading ? (\r\n          <>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n              <h1 className=\"fs-4 fw-bold mb-0\">{name}</h1>\r\n              <AddNfts save={addNft} address={address} />\r\n            </div>\r\n            <Row xs={1} sm={2} lg={3} className=\"g-3  mb-5 g-xl-4 g-xxl-5\">\r\n              {nfts.map((_nft) => (\r\n                <Nft\r\n                  key={_nft.index}\r\n                  nft={{\r\n                    ..._nft,\r\n                  }}\r\n                  buyNft={() => buyArt(_nft.index)}\r\n                  likeNft={() => likeArt(_nft.index)}\r\n                />\r\n              ))}\r\n            </Row>\r\n          </>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nNftList.propTypes = {\r\n  minterContract: PropTypes.instanceOf(Object),\r\n  updateBalance: PropTypes.func.isRequired,\r\n};\r\n\r\nNftList.defaultProps = {\r\n  minterContract: null,\r\n};\r\n\r\nexport default NftList;","import { useContract } from \"./useContract\";\r\nimport KamilTouchAbi from \"../contracts/KamilTouch.json\";\r\nimport contractAddress from \"../contracts/KamilTouch-address.json\";\r\n\r\nexport const useMinterContract = () =>\r\n  useContract(KamilTouchAbi.abi, contractAddress.KamilTouch);\r\n  ","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\n\r\nexport const useContract = (abi, contractAddress) => {\r\n  const { getConnectedKit, address } = useContractKit();\r\n  const [contract, setContract] = useState(null);\r\n\r\n  const getContract = useCallback(async () => {\r\n    const kit = await getConnectedKit();\r\n    setContract(new kit.web3.eth.Contract(abi, contractAddress));\r\n  }, [getConnectedKit, abi, contractAddress]);\r\n\r\n  useEffect(() => {\r\n    if (address) getContract();\r\n  }, [address, getContract]);\r\n\r\n  return contract;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bg_image.cb662a76.jpg\";","import React from \"react\";\r\nimport { Container, Nav } from \"react-bootstrap\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\nimport { Notification } from \"./components/ui/Notifications\";\r\nimport Wallet from \"./components/Wallet\";\r\nimport Cover from \"./components/minter/Cover\";\r\nimport Nfts from \"./components/minter/nfts\";\r\nimport { useBalance, useMinterContract } from \"./hooks\";\r\nimport coverImg from \"./assets/bg_image.jpg\";\r\nimport \"./App.css\";\r\n\r\nconst App = function AppWrapper() {\r\n  const { address, destroy, connect } = useContractKit();\r\n  const { balance, getBalance } = useBalance();\r\n  const minterContract = useMinterContract();\r\n\r\n  return (\r\n    <>\r\n      <Notification />\r\n      {address ? (\r\n        <Container fluid=\"md\">\r\n          <Nav className=\"nav justify-content-between align-item-center pt-3 pb-5\">\r\n            <Nav.Item className=\"px-4\">\r\n              <h1>KamilTouch</h1>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Wallet\r\n                address={address}\r\n                amount={balance.CELO}\r\n                symbol=\"CELO\"\r\n                destroy={destroy}\r\n              />\r\n            </Nav.Item>\r\n          </Nav>\r\n          <main className=\"main\">\r\n            <div class=\"painting-search\">\r\n              <input type=\"search\" placeholder=\"Search\" />\r\n              <img src=\"https://cdn-icons-png.flaticon.com/512/54/54481.png\" alt=\"Seacrh icon\" />\r\n            </div>\r\n            <Nfts\r\n              name=\"KamilTouch Artistry\"\r\n              updateBalance={getBalance}\r\n              minterContract={minterContract}\r\n            />\r\n          </main>\r\n        </Container>\r\n      ) : (\r\n        <Cover name=\"KamilTouch Artistry\" coverImg={coverImg} connect={connect} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\r\n\r\nexport const useBalance = () => {\r\n  const { address, kit } = useContractKit();\r\n  const [balance, setBalance] = useState(0);\r\n\r\n  const getBalance = useCallback(async () => {\r\n    // fetch a connected wallet token balance\r\n    const value = await kit.getTotalBalance(address);\r\n    setBalance(value);\r\n  }, [address, kit]);\r\n\r\n  useEffect(() => {\r\n    if (address) getBalance();\r\n  }, [address, getBalance]);\r\n\r\n  return {\r\n    balance,\r\n    getBalance,\r\n  };\r\n};\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  ContractKitProvider,\r\n  Alfajores,\r\n  NetworkNames,\r\n} from \"@celo-tools/use-contractkit\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"@celo-tools/use-contractkit/lib/styles.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContractKitProvider\r\n      networks={[Alfajores]}\r\n      network={{\r\n        name: NetworkNames.Alfajores,\r\n        rpcUrl: \"https://alfajores-forno.celo-testnet.org\",\r\n        graphQl: \"https://alfajores-blockscout.celo-testnet.org/graphiql\",\r\n        explorer: \"https://alfajores-blockscout.celo-testnet.org\",\r\n        chainId: 44787,\r\n      }}\r\n      dapp={{\r\n        name: \"KamilTouch Artistry\",\r\n        description: \"An NFT collection of exquisite artwork\",\r\n      }}\r\n    >\r\n      <App />\r\n    </ContractKitProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}